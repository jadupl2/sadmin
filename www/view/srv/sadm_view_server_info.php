<?php
# ==================================================================================================
#   Author      :  Jacques Duplessis
#   Title       :  sadm_view_server_info.php
#   Version     :  1.5
#   Date        :  9 Dec 2016
#   Requires    :  php - MySql
#   Description :  This page allow to view the servers farm information 
#   
#   Copyright (C) 2016 Jacques Duplessis <sadmlinux@gmail.com>
#   The SADMIN Tool is free software; you can redistribute it and/or modify it under the terms
#   of the GNU General Public License as published by the Free Software Foundation; either
#   version 2 of the License, or (at your option) any later version.
#
#   SADMIN Tools are distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#   See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along with this program.
#   If not, see <http://www.gnu.org/licenses/>.
# ==================================================================================================
# ChangeLog
# 2017_10_10 web v1.00 System info - Initial version
# 2017_10_21 web v1.01 System info - Replace PostGres Database with MySQL 
# 2017_11_09 web v1.02 System info - Web Interface changed for ease of maintenance.
# 2018_01_04 web v2.01 System info - Add Button at bottom of page to show more System Info.
# 2018_02_08 web v2.02 System info - Rework page design and button at bottom of page
# 2018_04_07 web v2.03 System info - Change Page & Fixes some bugs
# 2018_10_01 web v2.04 System info - Alert Group was remove from server view (Unnecessary)
# 2018_10_22 web v2.05 System info - Change for shorter field label
# 2018_10_28 web v2.06 System info - Add prefix 'cfg2html_' to filename generated by cfg2html & link to files.
# 2019_01_11 web v2.07 System info - CLicking in Server Information Button send you to update menu.
# 2019_01_19 web v2.08 System info - Day,Date and time of Backup display according to schedule.
# 2019_01_21 web v2.09 System info - Dark Theme, new presentation, button , perf. graph ...
# 2019_03_17 web v2.10 System info - Volume Group Used & Free Size now show with GB unit.
# 2019_04_04 web v2.11 System info - Adapt for Schedule_text function change in library
# 2019_07_25 web v2.12 System info - Minor code changes
# 2019_10_15 web v2.13 System info - Color change of input fields.
# 2020_07_12 web v2.14 System info - Replace 'CRUD' button with 'Modify' directed to CRUD menu.
# 2020_12_29 web v2.15 System info - Date for starting & ending maintenance not show properly.
# 2022_06_16 web v2.16 System info - If O/S code name is empty, don't print empty parentheses.
# 2022_09_12 web v2.17 System info - Enhance buttons look at the top of the page.
# 2022_09_22 web v2.18 System info - Add Backup button to give direct access to backup schedule.
# 2022_09_23 web v2.19 System info - Add Rear & OS Update buttons,give direct access to schedule.
#@2022_11_15 web v2.20 System info - Button backup, OSupdate & ReaR wasn't returning to right page.
# ==================================================================================================
#
# REQUIREMENT COMMON TO ALL PAGE OF SADMIN SITE
require_once ($_SERVER['DOCUMENT_ROOT'].'/lib/sadmInit.php');           # Load sadmin.cfg & Set Env.
require_once ($_SERVER['DOCUMENT_ROOT'].'/lib/sadmLib.php');            # Load PHP sadmin Library
require_once ($_SERVER['DOCUMENT_ROOT'].'/lib/sadmPageHeader.php');     # <head>CSS,JavaScript</Head>
?>
<style>
.button {
    /* 
    background-color: #4178be;
    border: none; 
    */
    background-color: #f37320;
    background-color: #9FBF8C;
    color           : white;
    color           : black;
    padding         : 5px 16px;
    text-align      : center;
    text-decoration : none;
    display         : inline-block;
    font-size       : 13px;
    margin          : 2px 1px;
    cursor          : pointer;
    border-style    :   solid;
    border-color    :   #6b6c6f;
    border-radius   :   10px;
}
a:link      { color: #ffdfbd;   background-color: transparent; text-decoration: none; }
a:visited   { color: pink;      background-color: transparent; text-decoration: none; }
a:hover     { color: white;     background-color: transparent; text-decoration: underline; }
a:active    { color: yellow;    background-color: transparent; text-decoration: underline; }
</style>

<?php
require_once ($_SERVER['DOCUMENT_ROOT'].'/lib/sadmPageWrapper.php');    # Heading & SideBar


#===================================================================================================
#                                       Local Variables
#===================================================================================================
#
$DEBUG = False ;                                                        # Debug Activated True/False
$SVER  = "2.20" ;                                                       # Current version number
$URL_CREATE = '/crud/srv/sadm_server_create.php';                       # Create Page URL
$URL_UPDATE = '/crud/srv/sadm_server_update.php';                       # Update Page URL
$URL_DELETE = '/crud/srv/sadm_server_delete.php';                       # Delete Page URL
$URL_MAIN   = '/crud/srv/sadm_server_main.php';                         # Maintenance Main Page URL
$URL_HOME   = '/index.php';                                             # Site Main Page
$URL_VIEW_SERVERS = '/view/srv/sadm_view_servers.php';                  # URL to come back to 
$URL_MENU     = '/crud/srv/sadm_server_menu.php';                       # Maintenance Main Menu URL
$URL_VIEW     = '/view/srv/sadm_view_server_info.php';                  # URL of this page
$URL_REAR     = '/crud/srv/sadm_server_rear_backup.php';                # URL To Edit ReaR Schedule
$URL_OSUPDATE = '/crud/srv/sadm_server_osupdate.php';                   # URL Edit O/S Update Sched
$URL_BACKUP   = '/crud/srv/sadm_server_backup.php';                     # URL of Backup Page
$CREATE_BUTTON = False ;                                                # Yes Display Create Button



# ==================================================================================================
#                      DISPLAY SERVER DATA USED IN THE DATA INPUT FORM
#
#  wrow  = Array containing table row keys/values
#  mode  = "[D]isplay" Only show row content - Can't modify any information
#        = "[C]reate"  Display default values and user can modify all fields, except the row key
#        = "[U]pdate"  Display row content and user can modify all fields, except the row key
# ==================================================================================================
function display_server_data ($wrow) {
    global $URL_UPDATE, $URL_MENU;
    
    # DISPLAY TOP BUTTONS 
    echo "\n\n<div class='server_top_buttons'>          <!-- Start of Bottom Buttons DIV -->";
    echo "\n<center>"; display_top_buttons ($wrow); echo "\n</center>";
    echo "\n</div>                                      <!-- End of Bottom Buttons DIV -->";
    echo "\n<br>";
    
    # Server Data Info DIV
    echo "\n\n<div class='server_data'>                 <!-- Start of Server Data DIV -->";
    echo "\n<center>";

    # DATA LEFT SIDE DIV
    echo "\n\n<div class='server_leftside'>             <!-- Start Data LeftSide  -->";
    display_left_side ($wrow);
    echo "\n\n</div>                                    <!-- End of LeftSide Data -->";

    # DATA RIGHT SIDE DIV
    echo "\n\n<div class='server_rightside'>            <!-- Start RightSide Data  -->";
    display_right_side ($wrow);
    echo "\n\n</div>                                    <!-- End of RightSide Data -->";
    echo "\n</center>";
    
    echo "\n<div style='clear: both;'> </div>\n";                       # Clear Move Down Now
    echo "\n</div>                                      <!-- End of Server Data DIV -->";
}




# ==================================================================================================
#                               DISPLAY LEFT SIDE OF SERVER DATA 
#                           wrow  = Array containing table row keys/values
# ==================================================================================================
function display_left_side ($wrow) 
{
    # Server Name and Domain
    echo "\n\n<div class='server_left_label'>Server Name</div>";
    echo "\n<div class='server_left_data'>" ;
    echo $wrow['srv_name'] . "." . $wrow['srv_domain'] ;
    echo "</div>";
 
    # Server Description
    echo "\n\n<div class='server_left_label'>Description</div>";
    echo "\n<div class='server_left_data'>" . $wrow['srv_desc'] . "</div>";
 
    # Server O/S Type 
    echo "\n\n<div class='server_left_label'>O/S Type</div>";
    echo "\n<div class='server_left_data'>" . ucfirst($wrow['srv_ostype']) . "</div>";
 
    # O/S Name, Code Name and O/S Version
    echo "\n\n<div class='server_left_label'>O/S Name & Version</div>";
    echo "\n<div class='server_left_data'>";
    echo ucfirst($wrow['srv_osname']);
    if (empty($wrow['srv_oscodename'])) { 
        echo "&nbsp" ; 
        #echo "empty" ; 
    }else{ 
        #echo " ("...$wrow['srv_oscodename']...") " ; 
        echo " (". $wrow['srv_oscodename'] .") " ; 
    }
    echo $wrow['srv_osversion'];
    echo "</div>";

    # Kernel Version & Bit Mode
    echo "\n\n<div class='server_left_label'>Kernel Version</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_kernel_version'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo $wrow['srv_kernel_version'] ; 
    }
    if (empty($wrow['srv_kernel_bitmode'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo " - " . $wrow['srv_kernel_bitmode'] . " Bits" ; 
    }
    echo "</div>";

    # Hardware Bit Mode
    echo "\n\n<div class='server_left_label'>Hardware Bit Mode</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_hwd_bitmode'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo $wrow['srv_hwd_bitmode'] . " Bits" ; 
    }
    echo "</div>";

    # Server Tag 
    echo "\n\n<div class='server_left_label'>Server Tag</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_tag'])) { echo "&nbsp" ; }else{ echo $wrow['srv_tag'] ; }
    echo "</div>";

    # SADMIN Install Root Directory
    echo "\n\n<div class='server_left_label'>Install Directory</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_sadmin_dir'])) { echo "&nbsp" ; }else{ echo $wrow['srv_sadmin_dir'] ; }
    echo "</div>";

    # Server Note
    echo "\n\n<div class='server_left_label'>Server Note</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_note'])) { echo "&nbsp" ; }else{ echo $wrow['srv_note'] ; }
    echo "</div>";

    # Server Category
    echo "\n\n<div class='server_left_label'>Category</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_cat'])) { echo "&nbsp" ; }else{ echo $wrow['srv_cat'] ; }
    echo "</div>";

    # Server Group
    echo "\n\n<div class='server_left_label'>Group</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_group'])) { echo "&nbsp" ; }else{ echo $wrow['srv_group'] ; }
    echo "</div>";

    # Server Status
    echo "\n\n<div class='server_left_label'>Server Active</div>";
    echo "\n<div class='server_left_data'>";
    if ($wrow['srv_active'] == True) { echo "Yes" ; }else{ echo "No" ; }
    echo "</div>";

    # Server Virtual ?
    echo "\n\n<div class='server_left_label'>Virtual/Physical</div>";
    echo "\n<div class='server_left_data'>";
    if ($wrow['srv_vm'] == True) { echo "Virtual" ; }else{ echo "Physical" ; }
    echo "</div>";

    # Server Sporadic
    echo "\n\n<div class='server_left_label'>Online Sporadically</div>";
    echo "\n<div class='server_left_data'>";
    if ($wrow['srv_sporadic'] == True) { echo "Yes" ; }else{ echo "No" ; }
    echo "</div>";

    # Include Server in Performance Graph
    echo "\n\n<div class='server_left_label'>Performance Graph</div>";
    echo "\n<div class='server_left_data'>";
    if ($wrow['srv_graph'] == True) { echo "Yes" ; }else{ echo "No" ; }
    echo "</div>";

    # Server Model
    echo "\n\n<div class='server_left_label'>Server Model</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_model'])) { echo "&nbsp" ; }else{ echo $wrow['srv_model'] ; }
    echo "</div>";

    # Server Serial
    echo "\n\n<div class='server_left_label'>Serial Number</div>";
    echo "\n<div class='server_left_data'>";
    if (empty($wrow['srv_serial'])) { echo "N/A" ; }else{ echo $wrow['srv_serial'] ; }
    echo "</div>";

    # Server Monitored
    echo "\n\n<div class='server_left_label'>Monitor Server</div>";
    echo "\n<div class='server_left_data'>";
    if ($wrow['srv_monitor'] == True) { echo "Yes" ; }else{ echo "No" ; }
    echo "</div>"; 
    
    # SSH Port used to connect to client.
    echo "\n\n<div class='server_left_label'>SSH port</div>";
    echo "\n<div class='server_left_data'>" . $wrow['srv_ssh_port'] . "</div>";

    # Alert Group
    #echo "\n\n<div class='server_left_label'>Alert Group</div>";
    #echo "\n<div class='server_left_data'>";
    #if (empty($wrow['srv_alert_group'])) { 
    #    echo "&nbsp" ; 
    #}else{ 
    #    echo $wrow['srv_alert_group']; 
    #}
    #echo "</div>"; 
}


# ==================================================================================================
#                             DISPLAY RIGHT SIDE OF SERVER DATA 
#                           wrow  = Array containing table row keys/values
# ==================================================================================================
function display_right_side ($wrow) 
{
    # Secondary IP Address 
    if (! empty($wrow['srv_ips_info'])) { 
       $ipArray  = explode(",",$wrow['srv_ips_info']);
       $ipNumber = sizeof($ipArray);
       $ipLine   = ""; 
       if (count($ipArray) > 0) {
          for ($i = 0; $i < count($ipArray); ++$i) {
              list($Dev,$Ip,$Netmask,$MacAddr) = explode("|", $ipArray[$i] );
              echo "\n\n<div class='server_right_label'>Network Interface(".$i.")</div>";
              echo "\n<div class='server_right_data'>";
              #$info = sprintf ("%-7s %16s / %-15s / %s",$Dev,$Ip,$Netmask,$MacAddr);
              $IpName = gethostbyaddr ( $Ip );
              $info = sprintf ("%-10s  %-17s  %-20s",$Dev,$Ip,$IpName);
              echo $info;
              echo "</div>";
          }   
        }
    }else{
        echo "\n\n<div class='server_right_label'>Network Interface</div>";
        echo "\n<div class='server_right_data'>No Secondary IP</div>";
    }

    # Server Memory 
    echo "\n\n<div class='server_right_label'>Server Memory</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_memory'])) { echo "&nbsp" ; }else{ echo $wrow['srv_memory'] . " MB" ; }
    echo "</div>";

    # Server NB of CPU and CPU Speed
    echo "\n\n<div class='server_right_label'>Nb. Physical CPU</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_nb_cpu'])) { echo "&nbsp" ; }else{ echo $wrow['srv_nb_cpu']  ; }
    if (empty($wrow['srv_cpu_speed'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo " X " . $wrow['srv_cpu_speed'] . " Mhz" ; 
    }
    echo "</div>";

    # Server Nb. of Socket
    echo "\n\n<div class='server_right_label'>Nb. of CPU Socket</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_nb_socket'])) { echo "&nbsp" ; }else{ echo $wrow['srv_nb_socket']; }
    echo "</div>";

    # Server Nb. of Core per Socket
    echo "\n\n<div class='server_right_label'>Nb. of Core per Socket</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_core_per_socket'])) { echo "&nbsp" ; }else{ echo $wrow['srv_core_per_socket']; }
    echo "</div>";

    # Server Nb. of Thread Per Core
    echo "\n\n<div class='server_right_label'>Thread per Core</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_thread_per_core'])) { echo "&nbsp" ; }else{ echo $wrow['srv_thread_per_core']; }
    echo "</div>";

    # Server Disk Information
    if (! empty($wrow['srv_disks_info'])) { 
       $pvArray  = explode(",",$wrow['srv_disks_info']);
       $pvNumber = sizeof($pvArray);
       $pvLine   = ""; 
       #echo "count = " . count($pvArray);
       if (count($pvArray) > 0) {
          for ($i = 0; $i < count($pvArray); ++$i) {
              list($pvDev,$pvSize) = explode("|", $pvArray[$i] );
              echo "\n\n<div class='server_right_label'>Disk " . $i . " Information</div>";
              echo "\n<div class='server_right_data'>";
              $pvSize = $pvSize / 1000 ;
              $info = sprintf ("%-10s %16s GB",$pvDev,$pvSize);
              echo $info;
              echo "</div>";
          }   
        }
    }
    
    # Server VG Information
    if (! empty($wrow['srv_vgs_info'])) { 
       $vgArray  = explode(",",$wrow['srv_vgs_info']);
       $vgNumber = sizeof($vgArray);
       $vgLine   = ""; 
       if (count($vgArray) > 0) {
          for ($i = 0; $i < count($vgArray); ++$i) {
              list($vgName,$vgSize,$vgUse,$vgFree) = explode("|", $vgArray[$i] );
              echo "\n\n<div class='server_right_label'>Volume Group Info.(".$i.")</div>";
              echo "\n<div class='server_right_data'>";
              $vgSize = round($vgSize / 1024) ;
              $vgUse  = round($vgUse  / 1024) ;
              $vgFree = round($vgFree / 1024) ;
              $info = sprintf ("%-15s %-sGB Use %-sGB Free %-sGB",$vgName,$vgSize,$vgUse,$vgFree);
              echo $info;
              echo "</div>";
          }   
        }
    }
    
    # Blank Line
    #echo "\n\n<div class='server_right_label'>&nbsp</div>";
    #echo "\n<div class='server_right_data'>";
    #echo "&nbsp";
    #echo "</div>";
 
    # Reboot after Update
    echo "\n\n<div class='server_right_label'>Reboot after O/S Update</div>";
    echo "\n<div class='server_right_data'>";
    if ($wrow['srv_update_reboot'] == True) { echo "Yes" ; }else{ echo "No" ; }
    echo "</div>";

    # Month that O/S Update Can Occurs
    echo "\n\n<div class='server_right_label'>O/S Update Schedule</div>";
    echo "\n<div class='server_right_data'>";
    if ($wrow['srv_update_auto']) {
        list ($STR_SCHEDULE, $DATE_SCHED) = SCHEDULE_TO_TEXT($wrow['srv_update_dom'], $wrow['srv_update_month'],
                                     $wrow['srv_update_dow'], $wrow['srv_update_hour'],
                                     $wrow['srv_update_minute']);
        echo $STR_SCHEDULE;
    }else{
        echo "O/S Update schedule deactivated";
    }
    echo "</div>";

    # Last O/S Update Date & Status
    echo "\n\n<div class='server_right_label'>Last O/S update date</div>";
    echo "\n<div class='server_right_data'>";
    if ($wrow['srv_date_osupdate'] == "0000-00-00 00:00:00") { 
        echo "No Update Yet" ; 
    }else{ 
        echo $wrow['srv_date_osupdate']; 
        if ( ! empty($wrow['srv_update_status'])) { 
            $os_status = "Unknown";
            if ($wrow['srv_update_status'] =="R") { $os_status = "Running" ; } 
            if ($wrow['srv_update_status'] =="F") { $os_status = "Failed"  ; } 
            if ($wrow['srv_update_status'] =="S") { $os_status = "Success" ; } 
            echo "&nbsp&nbsp-&nbsp   $os_status";
        }
    }
    echo "</div>";
    
    # Server Maintenance Mode
    echo "\n\n<div class='server_right_label'>Maint. Mode</div>";
    echo "\n<div class='server_right_data'>";
    if ($wrow['srv_maintenance'] == True)  { echo "Active" ; }else{ echo "Inactive" ; }
    echo "</div>";

    # Date et Heure du debut de la maintenance
    echo "\n<div class='server_right_label'>Start of maintenance period</div>";
    if (is_null($wrow['srv_maint_date_start']) )
        { 
        $wrow['srv_maint_date_start'] = "0000-00-00 00:00:00"; 
        }
    echo "\n<div class='server_right_data'>" . $wrow['srv_maint_date_start'] . "</div>";

    # Date et Heure de la fin de la maintenance
    echo "\n<div class='server_right_label'>End of maintenance period</div>";
    if (is_null($wrow['srv_maint_date_end']) )
        { 
        $wrow['srv_maint_date_end'] = "0000-00-00 00:00:00"; 
        }
    echo "\n<div class='server_right_data'>" . $wrow['srv_maint_date_end'] . "</div>";


    echo "\n\n<div class='server_right_label'>Daily backup time</div>";
    echo "\n<div class='server_right_data'>\n";
    if ($wrow['srv_backup']) {
        list ($STR_SCHEDULE, $DATE_SCHED) = SCHEDULE_TO_TEXT($wrow['srv_backup_dom'], $wrow['srv_backup_month'],
                                     $wrow['srv_backup_dow'], $wrow['srv_backup_hour'],
                                     $wrow['srv_backup_minute']);
        echo $STR_SCHEDULE;
    }else{
        echo "Backup schedule deactivated";
    }
    echo "</div>";

       
    # Creation Date 
    echo "\n\n<div class='server_right_label'>System creation date</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_date_creation'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo $wrow['srv_date_creation']; 
    }
    echo "</div>";
    
    # Last Edit Date 
    echo "\n\n<div class='server_right_label'>System modification date</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_date_edit'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo $wrow['srv_date_edit']; 
    }
    echo "</div>";

    # Last Update Date 
    echo "\n\n<div class='server_right_label'>Last information collection date</div>";
    echo "\n<div class='server_right_data'>";
    if (empty($wrow['srv_date_update'])) { 
        echo "&nbsp" ; 
    }else{ 
        echo $wrow['srv_date_update']; 
    }
    echo "</div>";
}



# ==================================================================================================
#                             DISPLAY RIGHT SIDE OF SERVER DATA 
#                           wrow  = Array containing table row keys/values
# ==================================================================================================
function display_top_buttons ($wrow) {
    global  $URL_UPDATE, $URL_MENU, $URL_VIEW, $URL_REAR, $URL_OSUPDATE, 
            $URL_VIEW_SERVERS, $URL_BACKUP;
    
    # Display Button to Display System Information
    $wname = "/view/log/sadm_view_file.php";                            # URL that display File Recv
    $fname = SADM_WWW_DAT_DIR . "/" . $wrow['srv_name'] ."/dr/". $wrow['srv_name'] . "_system.txt";
    if (file_exists($fname)) {                                          # If FileName Received exist
        $BUTTON_URL = "${wname}?filename=${fname} ";                    # Build URL to file
        echo "\n<a href='" . $BUTTON_URL . "'>";                        # URL to See information
        echo "<span ' class='button' data-toggle='tooltip' title='View system information'>"; 
        echo "<img src='/images/server-icon.png' ";                 # Show Info Icon
        echo "style='width:32px;height:32px;'></span></a>";
    }

    # Display Button to Display Network Information
    $wname = "/view/log/sadm_view_file.php";                            # URL that display File Recv
    $fname = SADM_WWW_DAT_DIR . "/" . $wrow['srv_name'] ."/dr/". $wrow['srv_name'] . "_network.txt";
    if (file_exists($fname)) {                                          # If FileName Received exist
        $BUTTON_URL = "${wname}?filename=${fname} ";                    # Build URL to file
        echo "\n<a href='" . $BUTTON_URL . "'>";                        # URL to See information
        echo "<span ' class='button' data-toggle='tooltip' title='View network information'>";  
        echo "<img src='/images/network_icon.png' ";                    # Show Info Icon
        echo "style='width:32px;height:32px;'>&nbsp</span></a>";
    }

    # Display Button to Display Disks Information
    $wname = "/view/log/sadm_view_file.php";                            # URL that display File Recv
    $fname = SADM_WWW_DAT_DIR . "/" . $wrow['srv_name'] ."/dr/". $wrow['srv_name'] . "_diskinfo.txt";
    if (file_exists($fname)) {                                          # If FileName Received exist
        $BUTTON_URL = "${wname}?filename=${fname} ";                    # Build URL to file
        echo "\n<a href='" . $BUTTON_URL . "'>";                        # URL to See information
        echo "<span ' class='button' data-toggle='tooltip' title='Disk information about $wserver'>";  
        echo "<img src='/images/disk00.png' ";                    # Show Info Icon
        echo "style='width:32px;height:32px;'>&nbsp</span></a>";
    }

    # Display Button to Display System Summary Information
    $wname = "/view/log/sadm_view_file.php";                            # URL that display File Recv
    $fname = SADM_WWW_DAT_DIR . "/" . $wrow['srv_name'] ."/dr/". $wrow['srv_name'] . "_sysinfo.txt";
    if (file_exists($fname)) {                                          # If FileName Received exist
        $BUTTON_URL = "${wname}?filename=${fname} ";                    # Build URL to file
        echo "\n<a href='" . $BUTTON_URL . "'>";                        # URL to See information
        echo "<span ' class='button' data-toggle='tooltip' title='View system summary'>";  
        echo "<img src='/images/system_information02.png' ";                    # Show Info Icon
        echo "style='width:32px;height:32px;'></span></a>";
    }

    # Display Button to Display Performance Graph of server
    $wname = "/view/perf/sadm_server_perf.php?host=";                   # URL show Performance Graph
    $fname = SADM_WWW_DIR . "/rrd/" . $wrow['srv_name'] ."/". $wrow['srv_name'] . ".rrd";
    if (file_exists($fname)) {                                          # If rrd exist for server
        #BUTTON_URL = "${wname}?filename=${fname} ";                    # Build URL to file
        $BUTTON_URL = "${wname}${wrow['srv_name']}";            #Build URL to file
        echo "\n<a href='" . $BUTTON_URL . "'>";                        # URL to See information
        echo "<span ' class='button' data-toggle='tooltip' title='View performance graph'>";  
        echo "<img src='/images/sadm_perf_1.png' ";                    # Show Info Icon
        echo "style='width:32px;height:32px;'>&nbsp</span></a>";
    }

    # Display Button to Display CFG2HTML Information
    $fname = SADM_WWW_DAT_DIR . "/" . $wrow['srv_name'] ."/dr/cfg2html_". $wrow['srv_name'] . ".html";
    $url = "/dat/" . $wrow['srv_name'] ."/dr/cfg2html_". $wrow['srv_name'] . ".html";
    if (file_exists($fname)) {                                          # If FileName Received exist
        echo "\n<a href='" . $url . "'>";                               # Build URL 
        echo "<span ' class='button' data-toggle='tooltip' title='View cfg2html report'>";  
        echo "<img src='/images/sadm_cfg2html_0.png' ";                    # Show Info Icon
        echo "style='width:32px;height:32px;'>&nbsp</span></a>";
    }

    # Display Button to Backup Schedule.
    $wserver = $wrow['srv_name'];
    $BUTTON_URL = "${URL_BACKUP}?sel=${wserver}&back=${URL_VIEW}";
    echo "\n<a href='" . $BUTTON_URL . "'>";                        
    echo "<span ' class='button' data-toggle='tooltip' title='Edit backup schedule of $wserver'>";  
    echo "<img src='/images/backup2.png' style='width:32px;height:32px';>&nbsp</span></a>";

    # Display Button to O/S Update Schedule.
    $BUTTON_URL="${URL_OSUPDATE}?sel=${wserver}&back=${URL_VIEW}";
    echo "\n<a href='" . $BUTTON_URL . "'>";                        
    echo "<span ' class='button' data-toggle='tooltip' title='O/S update schedule for $wserver'>";  
    echo "<img src='/images/os.png' style='width:32px;height:32px';>&nbsp</span></a>";

    # Display Button to Rear Image Backup Schedule.
    $BUTTON_URL = "${URL_REAR}?sel=${wserver}&back=${URL_VIEW}";
    echo "\n<a href='" . $BUTTON_URL . "'>";                        
    echo "<span ' class='button' data-toggle='tooltip' title='Update ReaR schedule for $wserver'>";  
    echo "<img src='/images/rear2.png' style='width:32px;height:32px';>&nbsp</span></a>";

    # Display the Update Button
    $BUTTON_URL = "${URL_UPDATE}?sel=${wserver}&back=${URL_VIEW}";
    echo "\n<a href='" . $BUTTON_URL . "'>";                        
    echo "<span ' class='button' data-toggle='tooltip' title='Edit $wserver static info'>";  
    echo "<img src='/images/sadm_edit_0.png' style='width:32px;height:32px;'>&nbsp</span></a>";
}




# ==================================================================================================
#                                PROGRAM START HERE
# ==================================================================================================
#
    # Get the first Parameter (Should be the server name)
    if (isset($_GET['sel']) ) {                                        # Get Parameter Expected
        $HOSTNAME = $_GET['sel'];                                      # Parameter is Server Name
        if ($DEBUG) {echo "<br>Parameter received is $HOSTNAME\n";}     # Display Parameter Recv.

        # Construct SQL to Read the row
        $sql = "SELECT * FROM server WHERE srv_name = '" . $HOSTNAME ."'";
        if ($DEBUG) { echo "\n<br>Select statement is $sql\n"; }        # Display SQL Query 
        
        $result = mysqli_query($con,$sql) ;                             # Execute SQL Select
        if (!$result)   {                                               # If Server not found
            $err_msg = "<br>Server " . $HOSTNAME . " not found in the database.";  
            $err_msg = $err_msg . mysqli_error($con) ;                  # Add MySQL Error Msg
            sadm_fatal_error($err_msg);                                 # Display Error & Go Back
            exit();            
        }
        $NUMROW = mysqli_num_rows($result);                             # Get Nb of rows returned
        if ($NUMROW == 0)  {                                            # If Server not found
            $err_msg = "<br>Server " . $HOSTNAME . " not found in Database"; # Construct msg to user
            $err_msg = $err_msg . mysqli_error($con) ;                  # Add MySQL Error Msg
            if ($DEBUG) {                                               # In Debug Insert SQL in Msg
                $err_msg = $err_msg . "<br>\nMaybe a problem with SQL Command ?\n" . $query ;
            }
            sadm_fatal_error($err_msg);                                 # Display Error & Go Back
            exit();            
         }else{
            if ($DEBUG) {                                               # Debug Print Nb Rows
               echo "<br>Number of row(s) returned is ..." . strval($NUMROW) . "... " ;
            }
            $row = mysqli_fetch_assoc($result);
        }
     }else{
         $err_msg = "No Parameter Received - Please Advise Administrator" ;
         sadm_fatal_error($err_msg);                                    # Display Error & Go Back
         exit();            
  }

    $heading1 = "System Information" ; 
    $heading2 = $row['srv_name'].".".$row['srv_domain'];
    display_lib_heading("NotHome","$heading1","$heading2",$SVER);       # Display Content Heading
    display_server_data ($row);                                         # Display Server Data
    echo "</div> <!-- End of SimpleTable          -->" ;                # End Of SimpleTable Div
    std_page_footer($con)                                               # Close MySQL & HTML Footer
?>