#!/bin/ksh
#----------------------------------------------------------------------------- 
# Script   : sam_mkfs - Make LV and FS
# Version  : 1.0.0
# Auteur   : Marc Giguere 
# Date     : Wed Dec 22 13:57:37 EST 2004
#----------------------------------------------------------------------------- 
# sam_mkfs  FSzige VGname LVname FSname FStype Strip# Strip_size
#----------------------------------------------------------------------------- 
export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin
export PROGRAM_NAME=sam_mkfs
export SAMDIR=/sysadmin/sam
export LOGFILE=sam.log

#----------------------------------------------------------------------------- 
# fonction : do_log
#----------------------------------------------------------------------------- 
do_log()
{
  message="$1"
  dt=`date +"%Y%m%d %H:%M:%S"`
  echo "$dt - $PROGRAM_NAME : $message"
  echo "$dt - $PROGRAM_NAME : $message" >> $LOGFILE
}

#----------------------------------------------------------------------------- 
# fonction : do_usage
#----------------------------------------------------------------------------- 
do_usage()
{
   echo "Usage: sam_mkfs SIZEmegs VGname LVname FSname FStype strip# strip_size"
   exit 1
}

#-----------------------------------------------------------------------------
# fonction : do_get_lvmtype
#-----------------------------------------------------------------------------
do_get_lvmtype()
{
  LVMTYPE=""
  if [ -a $SAMDIR/files/sam_lvm.seq ]
     then LVMTYPE=`nawk '{print $1}' $SAMDIR/files/sam_lvm.seq`
     else do_log "Error file $SAMDIR/files/sam_lvm.seq not found"
          exit 1
  fi

  case $LVMTYPE in
     1 ) LVMTYPE=lvm1;;
     2 ) LVMTYPE=lvm2;;
     * ) do_log "Not LVM TYPE found in $SAMDIR/files/sam_lvm.seq"
          exit 1;;
  esac

  export LVMTYPE
}

#----------------------------------------------------------------------------- 
# fonction : do_verify_vgname
#----------------------------------------------------------------------------- 
do_verify_vgname()
{
  NAME=$1
  SIZE=$2
  echo "Verify Volume Group......[$NAME] \c"
  IS_FOUND=`vgscan|grep $NAME`
  if [ "$IS_FOUND" = "" ]
     then echo "Error - not exist"
          exit 1
  fi
  IS_SIZE=`vgdisplay $NAME|grep Free|nawk '{A=$7;if ($8=="GB"){A=A*1024}print int(A)}'`

  if [ "$SIZE" -gt "$IS_SIZE" ]
     then echo "Error - Available space $IS_SIZE megs"
          exit 1
  fi
                             
  echo "Available space $IS_SIZE OK"
}

#----------------------------------------------------------------------------- 
# fonction : do_verify_lvname
#----------------------------------------------------------------------------- 
do_verify_lvname()
{
  NAME=$1
  echo "Verify Logical Volume....[$NAME] \c"
  IS_FOUND=`lvscan|grep $NAME| nawk '{print $4}'`
  if [ "$IS_FOUND" != "" ]
     then echo "Error - Already exist in $IS_FOUND"
          exit 1
  fi
  echo "OK"
}

#----------------------------------------------------------------------------- 
# fonction : do_verify_lvtype
#----------------------------------------------------------------------------- 
do_verify_lvtype()
{
  TYPE=$1
  SIZE=$2

  echo "Verify Logical Type......[$TYPE] \c"
  IS_FOUND=`grep $NAME $SAMDIR/files/sam_fs.seq`
  if [ "$IS_FOUND" != "" ]
     then echo "Error - not found"
          exit 1
  fi

  if [ "$TYPE" = "jfs" ]
     then if [ "$SIZE" -lt 16 ]
             then echo "Error - Minimun size of 16 Megs"
                  exit 1
          fi
  fi
  if [ "$TYPE" = "reiserfs" ]
     then if [ "$SIZE" -lt 40 ]
             then echo "Error - Minimun size of 40 Megs"
                  exit 1
          fi
  fi
  echo "OK"
}

#----------------------------------------------------------------------------- 
# fonction : do_verify_fsname
#----------------------------------------------------------------------------- 
do_verify_fsname()
{
  NAME=$1
  echo "Verify FileSystem........[$NAME] \c"
  # --- Mount point start with /
  IS_VALID=`echo $NAME|nawk '{if (substr($1,1,1)=="/"){print "YES"}}'`
  if [ "$IS_VALID" != "YES" ]
     then echo "Error - Invalid Mount Point"
          exit 1
  fi
  # ---Check with if mounted
  IS_FOUND=`mount|nawk '{if ($3==FSNAME){print $1;exit}}' FSNAME=$NAME`
  if [ "$IS_FOUND" != "" ]
     then echo "Error - Already exist in $IS_FOUND"
          exit 1
          #--- check in /etc/fstab
     else IS_FOUND=`nawk '{if ($2==FSNAME){print $1;exit}}' FSNAME=$NAME /etc/fstab`
          if [ "$IS_FOUND" != "" ]
             then echo "Error - Already exist in /etc/fstab"
                  exit 1
          fi
  fi
  echo "OK"
}

#----------------------------------------------------------------------------- 
# fonction : do_make_lv
#----------------------------------------------------------------------------- 
do_make_lv()
{
  VG=$1
  LV=$2
  SZ=$3"M"
  echo "Make Logical Group.......[$LV $SZ] "
  lvcreate -L$SZ -n $LVNAME $VGNAME 
  RTN_CODE=$?
  if [ "$RTN_CODE" != 0 ]
     then echo "Error [$RTN_CODE]"
          exit $RTN_CODE
  fi
  echo "OK"
}


#----------------------------------------------------------------------------- 
# fonction : do_mkdir  
#----------------------------------------------------------------------------- 
do_mkdir()
{
  DIR=$1
  OLDPWD=`pwd`
  
  ROOTDIR="/"
  for file in `echo $DIR|nawk 'BEGIN{RS="/"}{print $1}'`
  do
     cd $ROOTDIR
     if [ ! -a $file ]
        then mkdir $file
     fi
     ROOTDIR=$ROOTDIR""$file"/"
   done
   cd $OLDPWD
  
}

  

#----------------------------------------------------------------------------- 
# fonction : do_make_fs
#----------------------------------------------------------------------------- 
do_make_fs()
{
  VG=$1
  LV=$2
  FS=$3
  TY=$4
  SP=$5
  SS=$6
  

  echo "Make File System.........[$TY $FS] "
  case $TY in
    ext3     ) mkfs.ext3 -b4096 /dev/$VG/$LV 
               RTN_CODE=$?
               tune2fs -c0 -i0 /dev/$VG/$LV;;
    jfs      ) mkfs.jfs /dev/$VG/$LV
               RTN_CODE=$?;;
    reiserfs ) mkfs.reiserfs -q /dev/$VG/$LV
               RTN_CODE=$?;;
  esac
  if [ "$RTN_CODE" != 0 ]
     then echo "Error [$RTN_CODE]"
          exit $RTN_CODE
     else echo "OK"
  fi

  do_mkdir $FS

  echo "Mount File system .......[$FS] \c"
  DTIME=`date +"%Y%m%d_%H%M%S"`
  echo "#DEFINE $FS Strip $SP Stripsize $SS Date $DTIME" >> /etc/fstab
  echo "/dev/$VG/$LV    $FS  $TY defaults 1 2" >> /etc/fstab
  mount $FSNAME 1>/dev/null 2>&1
  if [ "$RTN_CODE" != 0 ]
     then echo "Error [$RTN_CODE]"
          exit $RTN_CODE
  fi

  echo "OK"
  df -k $FS
}

  
#----------------------------------------------------------------------------- 
# Main
#----------------------------------------------------------------------------- 

export RTN_CODE=0
if [ $# -ne 7 ]
   then do_usage
fi


LVSIZE=$1;VGNAME=$2;LVNAME=$3;FSNAME="$4";LVTYPE=$5;LVSTRIP=$6;LVSTRIPSZ=$7

do_get_lvmtype
do_verify_vgname $VGNAME $LVSIZE
do_verify_lvname $LVNAME
do_verify_lvtype $LVTYPE $LVSIZE
do_verify_fsname $FSNAME

do_make_lv $VGNAME $LVNAME $LVSIZE $LVSTRIP $LVSTRIPSZ
do_make_fs $VGNAME $LVNAME $FSNAME $LVTYPE $LVSTRIP $LVSTRIPSZ


do_log "`logname` makefs $LVMTYPE /dev/$VGNAME/$LVNAME MountPoint: $FSNAME"
exit $RTN_CODE
