-----
***** Arithmetic
index=`expr $index + 1`
$ echo $a $b $c
18 27 45
$ let d=$a+$c
$ echo $d
63
a=$(( 4 * 5 ))
echo $a 
$ 20
a=$( expr 10 - 3 )
echo $a 
$ 7

-----
***** Case statement
case "$(sadm_get_osname)" in                                       
    "REDHAT"|"CENTOS"|"FEDORA")     sadm_writelog "Package rpm"
                                    ;;
    "UBUNTU"|"DEBIAN"         )     sadm_writelog "Package"
                                    ;;
      "*"                     )     sadm_writelog "OS Not Supported yet"
                                    ;;
esac

-----
Crontab fields

0 -> Sun
1 -> Mon
2 -> Tue
3 -> Wed
4 -> Thu
5 -> Fri
6 -> Sat
7 -> Sun

 +---------------- minute (0 - 59)
 |   +------------- hour (0 - 23)
 |    |   +---------- date of month (1 - 31)
 |    |   |    +------- month (1 - 12)
 |    |   |    |   +---- day of week (0 - 6) (Sunday=0 or 7)
 |    |   |    |   |
 *   *   *   *  *  command to be executed



-----
***** Date Command
monday                      date -dmonday +%Y%m%d 
last monday                 date -dlast-monday +%Y%m%d 
next monday                 date -dnext-monday +%Y%m%d 
two mondays from now        date -d'monday+14 days' +%Y%m%d 
two mondays ago             date -d'monday-14 days' +%Y%m%d 
2 weeks ago                 date -d'monday-fortnight ago' +%Y%m%d   
2 weeks from now            date -d'monday+fortnight' +%Y%m%d       
Monday Next Year            date -d'52+monday' +%Y%m%d
2018.06.20 14:44:55         date "+%C%y.%m.%d %H:%M:%S"

-----
***** File Test Operator
-e          file exists
-a          file exists (depreciated)
-f          file is a regular file (not a directory or device file)
-s          file is not zero size
-d          file is a directory
-b          file is a block device
-c          file is a character device
-p          file is a pipe
-h          file is a symbolic link
-L          file is a symbolic link
-S          file is a socket
-t          file (descriptor) is associated with a terminal device
-r          file has read permission (for the user running the test)
-w          file has write permission (for the user running the test)
-x          file has execute permission (for the user running the test)
-g          set-group-id (sgid) flag set on file or directory
-u          set-user-id (suid) flag set on file
-k          sticky bit set
-O          you are owner of file
-G          group-id of file same as yours
-N          file modified since it was last read
f1 -nt f2   file f1 is newer than f2
f1 -ot f2   file f1 is older than f2
f1 -ef f2   files f1 and f2 are hard links to the same file

$ [[ -f /etc/passwd ]]     && echo "File exist" || echo "File does not exist"
$ [[ -f /tmp/fileonetwo ]] && echo "File exist" || echo "File does not exist"

$ [ -d /var/logs ]    && echo "Directory exist" || echo "Directory does not exist"
$ [ -d /dumper/fack ] && echo "Directory exist" || echo "Directory does not exist"

-----

-----
-----
