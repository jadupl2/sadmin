
pi@raspi3:/opt $ date
Sun Jul  8 11:16:07 EDT 2018

pi@raspi3:/opt $ uname -a
Linux raspi3 4.14.50-v7+ #1122 SMP Tue Jun 19 12:26:26 BST 2018 armv7l GNU/Linux

pi@raspi3:/opt $ lsb_release -a
No LSB modules are available.
Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 9.4 (stretch)
Release:	9.4
Codename:	stretch
pi@raspi3:/opt $ 

pi@raspi3:/opt $ ls -l 
total 20
drwxr-xr-x 5 root root 4096 Jun 26 20:52 minecraft-pi
drwxr-xr-x 3 root root 4096 Jun 26 20:50 pigpio
drwxr-xr-x 5 root root 4096 Jun 26 20:52 sonic-pi
drwxr-xr-x 7 root root 4096 Jun 26 20:22 vc
drwxr-xr-x 4 root root 4096 Jun 26 21:05 Wolfram
pi@raspi3:/opt $ 

root@raspi3:~# sudo su - 
root@raspi3:~# 

root@raspi3:/opt# ls -l
total 20652
drwxr-xr-x 5 root root     4096 Jun 26 20:52 minecraft-pi
drwxr-xr-x 3 root root     4096 Jun 26 20:50 pigpio
-rw-r--r-- 1 root root 21125571 Jul  8 11:20 sadmin_0.87_20180708.tgz
drwxr-xr-x 5 root root     4096 Jun 26 20:52 sonic-pi
drwxr-xr-x 7 root root     4096 Jun 26 20:22 vc
drwxr-xr-x 4 root root     4096 Jun 26 21:05 Wolfram
root@raspi3:/opt# 

root@raspi3:/opt# 
root@raspi3:/opt# 
root@raspi3:/opt# mkdir sadmin
root@raspi3:/opt# cd sadmin
root@raspi3:/opt/sadmin# tar -xzf ../sadmin_0.87_20180708.tgz 
root@raspi3:/opt/sadmin# ls -l
total 88
drwxrwxr-x  2 601 601  4096 Jun 24 12:54 bin
drwxrwxr-x  2 601 601  4096 Jul  8 11:17 cfg
drwxrwxr-x  8 601 601  4096 Jul  8 11:17 dat
drwxrwxr-x  4 601 601  4096 Jul  8 10:48 doc
drwxrwxr-x  3 601 601  4096 Jun  6 11:28 lib
-r--r--r--  1 601 601 35141 Jul  8 11:17 LICENSE
drwxrwxr-x  2 601 601  4096 Jul  8 11:17 log
drwxrwxr-x  6 601 601  4096 Jun 24 11:00 pkg
-rw-rw-r--  1 601 601  3292 Jul  8 11:17 README.md
drwxrwxr-x  6 601 601  4096 Jul  8 11:17 setup
drwxrwxr-x  2 601 601  4096 Jun 23 09:06 sys
drwxrwxr-x  2 601 601  4096 Jul  8 11:17 tmp
drwxrwxr-x  6 601 601  4096 Jul  8 11:17 usr
drwxrwxr-x 13 601 601  4096 Jul  8 11:17 www
root@raspi3:/opt/sadmin# 

root@raspi3:/opt/sadmin/setup# ./setup.sh

 ____    _    ____  __  __ ___ _   _ 
/ ___|  / \  |  _ \|  \/  |_ _| \ | |
\___ \ / _ \ | | | | |\/| || ||  \| |
 ___) / ___ \| |_| | |  | || || |\  |
|____/_/   \_\____/|_|  |_|___|_| \_|
                                     
SADMIN Pre-installation verification v1.6
---------------------------------------------------------------------------
Checking if 'lsb_release' is installed ...  Done 
Checking if 'python3' is installed ...  Done 
All Verifications Pass ...


SADMIN Setup V3.0
---------------------------------------------------------------------------
Enter directory path where you install SADMIN : /opt/sadmin
SADMIN Environment variable now set to /opt/sadmin
  - Line below is now in /etc/profile.d/sadmin.sh & /etc/environment
    SADMIN=/opt/sadmin
  - This will make 'SADMIN' environment variable set upon reboot
  - Initial SADMIN configuration file (/opt/sadmin/cfg/sadmin.cfg) in place.
 
 
----------
[SADM_HOST_TYPE]
Specify if this host is to become a SADMIN [C]lient or [S]erver.
Host will be a SADMIN [S]erver or a [C]lient [C] : c
[SADM_HOST_TYPE] set to 'C' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_CIE_NAME]
This name will appear in the heading of the web interface and on some
report and email that SADMIN produce.
Enter your Company Name : The Batcave
[SADM_CIE_NAME] set to 'The Batcave' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_MAIL_ADDR]
This field specify the email address of the system administrator.
It's use by SADMIN Tools to send various email and alert.
Enter System Administrator Email : batman@batcave.com
[SADM_MAIL_ADDR] set to 'batman@batcave.com' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_ALERT_TYPE]
Default option for sending email after a script is finish.
Can be overridden by changing SADM_ALERT_TYPE in SADMIN section of your script.
[0] = Never send email.
[1] = Only send the log when script finish with error (Default)
[2] = Only send the log when script finish with success.
[3] = Always send the script log when script finish.
Enter default email type [1] : 
[SADM_ALERT_TYPE] set to '1' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_DOMAIN]
Default Domain Name to use when you will be adding a new server.
Default domain name : batcave.com
[SADM_DOMAIN] set to 'batcave.com' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_SERVER]
Enter the name of the SADMIN Server - (MUST be a fully qualified).
  - Can't be an alias in the DNS, it must be the real name of the server.
  - SADMIN server in /etc/hosts must not use a loopback address, but a real IP.
  - If you use /etc/hosts, put the FQDN name first like below:
      192.168.1.17    batserver.batcave.com batserver


Enter SADMIN (FQDN) server name : holmes.maison.ca
Validating server name ...
[SADM_SERVER] set to 'holmes.maison.ca' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_MAX_LOGLINE]
Every time a script (python or shell script) that use SADMIN Tools is run,
it produce a log, in the dedicated directory ${SADMIN}/log.
    - The name of the Log file is "[HOSTNAME]_[NAME_OF_SCRIPT].log".
    - Log file are cumulative by default, but it can be overriden if you want.
    - This number indicate the maximum of lines you want to keep in your log.
    - Log file are trim automatically at the end of script execution.
    - This help keeping our log to a reasonnable size.

Maximum number of lines in LOG file [1000] : 
[SADM_MAX_LOGLINE] set to '1000' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_MAX_RCHLINE]
When a (python or shell) script using the SADMIN tools start and ends, it
record the date/time and the ending status of your script in what we call
a RCH file ([R]eturn [C]ode [H]istory]) file.

    - The RCH file name are "[HOSTNAME]_[NAME_OF_SCRIPT].rch"
    - They are located in the directory ${SADMIN}/dat/rch.
    - RCH file are trim automatically at the end of script execution.
    - It indicate the maximum of lines you want to keep in each RCH file.
    - This help keeping our log to a reasonnable size.
    - The default value is 100 lines, this keep an history of ~50 days.
Maximum number of lines in RCH file [100] : 
[SADM_MAX_RCHLINE] set to '100' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_GROUP]
This is the primary user group that have access to all SADMIN directories.
    - All files in the $SADMIN directories are own by this group.
    - If others users need to access or used scripts located in $SADMIN,
      they must be part of this group.
    - The SADMIN default user group is 'sadmin'.

Enter SADMIN User Group [sadmin] : 
Creating group sadmin
[SADM_GROUP] set to 'sadmin' in /opt/sadmin/cfg/sadmin.cfg
 
----------
[SADM_USER]
This is SADMIN main username.
    - This user will have access to all SADMIN directories & files.
    - This user will become member of the SADMIN user group you just specified.
    - The SADMIN default user name is 'sadmin'.

Enter the default user name [sadmin] : 
Creating user sadmin
[SADM_USER] set to 'sadmin' in /opt/sadmin/cfg/sadmin.cfg
 
--------------------
Checking SADMIN Client Package requirement
 
Running apt-get update... Done 
Checking for sudo ...  Ok 
Checking for util-linux ...  Ok 
Checking for ethtool ... Installing ethtool ...  Done 
Checking for net-tools ...  Ok 
Checking for parted ...  Ok 
Checking for lsb-release ...  Ok 
Checking for nmon ... Installing nmon ...  Done 
Checking for bc ... Installing bc ...  Done 
Checking for perl-base ...  Ok 
Checking for libdatetime-perl libwww-perl ... Installing libdatetime-perl libwww-perl ...  Done 
Checking for openssh-client ...  Ok 
Checking for lshw ... Installing lshw ...  Done 
Checking for mailutils ... Installing mailutils ...  Done 
Checking for facter ... Installing facter ...  Done 
Checking for dmidecode ...  Ok 
Checking for gawk ... Installing gawk ...  Done 
Checking for python pip3 command ... Done
Installing python3 PyMySQL module (pip3 install PyMySQL) ...  Done 

--------------------
Creating 'sadmin' user sudo file
  - Creating SADMIN sudo file (/etc/sudoers.d/033_sadmin-nopasswd)
  - Permission on sudo file changed successfully
  - Ownership of sudo file changed successfully

--------------------
Creating SADMIN client crontab file (/etc/cron.d/sadm_client)
  - Client Crontab Permission changed successfully
  - Ownership of client crontab changed successfully
  
  
--------------------
Run SADMIN Daily scripts once to feed Database and Web Interface
  
Running Client Scripts
Running '/opt/sadmin/bin/sadm_create_sysinfo.sh' script ...  Done
Running '/opt/sadmin/bin/sadm_client_housekeeping.sh' script ...  Done
Running '/opt/sadmin/bin/sadm_dr_savefs.sh' script ...  Done
Running '/opt/sadmin/bin/sadm_cfg2html.sh' script ...  Done
Running '/opt/sadmin/bin/sadm_sysmon.pl' script ...  Done






SADMIN TOOLS - VERSION sadmin_0.87_20180708 - Successfully Installed
===========================================================================
You need to logout and log back in before using SADMIN Tools,
or type the following command (The dot and the space are important)
. /etc/profile.d/sadmin.sh
This will define SADMIN environment variable.
===========================================================================

CREATE YOUR OWN SCRIPT USING SADMIN LIBRARIES

Create your own script using SADMIN tools templates, take a look & run them 
  - bash shell script      : /opt/sadmin/bin/sadm_template.sh 
  - python script          : /opt/sadmin/bin/sadm_template.py 
 
Create your own shell script :
  # copy /opt/sadmin/bin/sadm_template.sh /opt/sadmin/usr/bin/newscript.sh
 
Modify it to your need, run it and see the result.
===========================================================================

SEE SADMIN FUNCTIONS IN ACTION AND LEARN HOW TO USE THEM BY RUNNING :

  - /opt/sadmin/bin/sadmlib_std_demo.sh 
  - /opt/sadmin/bin/sadmlib_std_demo.py.
===========================================================================

USE THE SADMIN WRAPPER TO RUN YOUR EXISTING SCRIPT

  - # $SADMIN/bin/sadm_wrapper.sh $SADMIN/usr/bin/yourscript.sh

===========================================================================
ENJOY !!
root@raspi3:/opt/sadmin/setup# date
Sun Jul  8 11:47:25 EDT 2018
root@raspi3:/opt/sadmin/setup# 

